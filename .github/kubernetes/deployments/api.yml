apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nginx-ingress-clusterrole
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - nodes
  - pods
  - secrets
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  - ingresses/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nginx-ingress-clusterrole-nisa-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nginx-ingress-clusterrole
subjects:
- kind: ServiceAccount
  name: nginx-ingress-serviceaccount
  namespace: ingress-nginx

---
apiVersion : apps/v1
kind: Deployment
metadata:
  name: nucleotidz-api
  labels:
    app: nucleotidz-api
    product: nucleotidz
spec:
 replicas: 1
 revisionHistoryLimit: 3
 progressDeadlineSeconds: 300
 strategy:
   type: RollingUpdate
   rollingUpdate:
     maxSurge: 1
     maxUnavailable: 0
 selector:
    matchLabels:
      app: nucleotidz-api
 template:
    metadata:
      labels:
        app: nucleotidz-api
        product: nucleotidz
    spec:
      securityContext:
         runAsNonRoot:  true
         fsGroup: 5000
      containers:
      - name: nucleotidz-api
        image:  nucleotidz.azurecr.io/nucleotidz/api
        imagePullPolicy: Always
        ports:
            - containerPort: 8080
              name: api
        securityContext:
          runAsUser: 1000
          runAsGroup: 2000
        resources:
          limits:
           cpu: 30m
           memory: 64Mi
          requests:
           cpu: 20m
           memory: 32Mi
        readinessProbe: 
          httpGet:
           path: /health/ready
           port: 8080
          initialDelaySeconds: 30
          failureThreshold: 3
          timeoutSeconds: 60
          periodSeconds: 60
        livenessProbe: #Failing liveness probe will restart the container.
         httpGet:
          path: /health/live
          port: 8080
         initialDelaySeconds: 30
         failureThreshold: 3
         timeoutSeconds: 60
         periodSeconds: 60
---

apiVersion: v1
kind: Service
metadata:
  name: nucleotidz-api-service
  labels:
    app: nucleotidz-api
spec:
  type: ClusterIP
  selector:
    app: nucleotidz-api
  ports:
    - port: 5000
      targetPort: "api"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nucleotidz-api-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - api.nucleotidz-test.dev
    secretName: nucelotidz-tls-ingress-secret
  rules:
  - host: api.nucleotidz-test.dev
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nucleotidz-api-service
            port:
              number: 5000